#include <iostream>
using namespace std;

class Complex {
    double real, imag;

public:
    
    Complex(double r = 0, double i = 0) : real(r), imag(i) {}

    
    Complex operator+(const Complex& c) const {
        return Complex(real + c.real, imag + c.imag);
    }

    
    Complex operator-(const Complex& c) const {
        return Complex(real - c.real, imag - c.imag);
    }

    
    Complex operator*(const Complex& c) const {
        return Complex(real * c.real - imag * c.imag, real * c.imag + imag * c.real);
    }

    
    friend istream& operator>>(istream& in, Complex& c) {
        cout << "Enter real and imaginary parts: ";
        in >> c.real >> c.imag;
        return in;
    }

    
    friend ostream& operator<<(ostream& out, const Complex& c) {
        out << c.real << (c.imag >= 0 ? "+" : "") << c.imag << "i";
        return out;
    }
};

int main() {
    Complex c1, c2, sum, diff, product;

    
    cout << "For the first complex number:" << endl;
    cin >> c1;
    cout << "For the second complex number:" << endl;
    cin >> c2;

    
    sum = c1 + c2;
    diff = c1 - c2;
    product = c1 * c2;

   
    cout << "Sum: " << sum << endl;
    cout << "Difference: " << diff << endl;
    cout << "Product: " << product << endl;

    return 0;
}

output:-
For the first complex number:
Enter real and imaginary parts: 3 4
For the second complex number:
Enter real and imaginary parts: 1 2
Sum: 4+6i
Difference: 2+2i
Product: -5+10i
